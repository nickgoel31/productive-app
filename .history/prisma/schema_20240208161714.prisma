// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ToDo {
  id          String    @id @default(uuid()) @map("_id")
  // userId      String   @unique
  title       String
  description String?
  createdAt   DateTime  @default(now())
  isDone      Boolean   @default(false)
  workspaceId String
  subTasks    SubTask[]
  // user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
}

model SubTask {
  id        String   @id @default(uuid()) @map("_id")
  title     String
  createdAt DateTime @default(now())
  isDone    Boolean  @default(false)
  priority  Int      @default(1)
  todoId    String
  todo      ToDo     @relation(fields: [todoId], references: [id], onDelete: Cascade)
}

model Workspace {
  id          String   @id @default(uuid()) @map("_id")
  userId      String
  name        String
  description String?
  imageUrl    String
  createdAt   DateTime @default(now())
  todos       ToDo[]
}

// model User {
//   id            String    @id @default(cuid())
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   image         String?
//   todos         ToDo[]
//   accounts      Account[]
// }

// model Account {
//   id                String  @id @default(cuid())
//   userId            String
//   type              String
//   provider          String
//   providerAccountId String
//   refresh_token     String? @db.Text
//   access_token      String? @db.Text
//   expires_at        Int?
//   token_type        String?
//   scope             String?
//   id_token          String? @db.Text
//   session_state     String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }
